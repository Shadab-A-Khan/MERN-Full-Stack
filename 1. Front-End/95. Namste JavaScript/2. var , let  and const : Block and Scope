

//______________________________________________________________________________________

//Block and scopr
//var , let and const

{
  var a=10;
  let b=20;
  const c=30;
  console.log(a);
  console.log(b);
  console.log(c);
}
console.log(a);
console.log(b); // b is defined in Block space so it will truough error from here only no further exectution
console.log(c);

//-------------
output:
// 10
// 20
// 30
// 10
// d:\vs\script.js:710
// console.log(b);
//             ^

// ReferenceError: b is not defined
//-------------

//______________________________________________________________________________________








//______________________________________________________

//shadowing

___________________________________

var a = 100;
{
  var a=10; //this variable will shadow the var a outside he scope
  
  console.log(a);
 
}
console.log(a);
___________________________________


//**notes
//var a=100 , a is stored in the global scope 
//var a=10    a referes to the same global scope and updates value of a to 10

//---------------
//ouput:
//10
//10
//---------------

_________________________________________________________






####____****---- in case of let ----***_____####

___________________________________

var a = 100;
{
  let a=10; 
  
  console.log(a);
 
}
console.log(a);
___________________________________



//**notes
//var a=10    a referes to the block scope , 
//var a=100 , a is stored in the global scope 


//---------------
//ouput:
//10
//100
//---------------


//______________________________________________________



//______________________________________________________

//shadowing


let b = 100;
{
  let b=10; 
  
  console.log(b);
 
}
console.log(b);


//let b=100 , a is stored in the script scope 
//let b=10    a referes to the  Block scope 
              so both will refer to differnt spaces and hence both will print differnt values
              unlike in case of var both were refering to the same global space and value of 'a' were getting updated.

//---------------
//ouput:
//10
//100
//---------------

//______________________________________________________



